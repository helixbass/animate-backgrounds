// Generated by CoffeeScript 1.6.2
(function() {
  var Tween, extend, map, _get, _init, _parse, _set;

  extend = $.extend, Tween = $.Tween, map = $.map;

  _init = function(tween) {
    var bgIndex, elem, end, endBg, prop, start, _i, _len, _results;

    elem = tween.elem, prop = tween.prop, end = tween.end;
    extend(tween, {
      start: _parse($(elem).css(prop)),
      end: _parse(end),
      set: true
    });
    start = tween.start, end = tween.end;
    _results = [];
    for (bgIndex = _i = 0, _len = end.length; _i < _len; bgIndex = ++_i) {
      endBg = end[bgIndex];
      _results.push(map(endBg, function(val, i) {
        var _amount, _rel_op;

        _rel_op = val[0], _amount = val[1];
        if (!_rel_op) {
          return val;
        }
        return val[1] = start[bgIndex][i][1] + _amount * (_rel_op === '-=' ? -1 : 1);
      }));
    }
    return _results;
  };

  _parse = function(val) {
    var bg, dim, _i, _len, _match, _ref, _results;

    _ref = val.split(/\s*,\s*/);
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      bg = _ref[_i];
      _results.push((function() {
        var _j, _len1, _ref1, _results1;

        _ref1 = bg.split(/\s+/);
        _results1 = [];
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          dim = _ref1[_j];
          _match = dim.match(/^([+-]=)?([+-]?\d+(?:\.\d*)?)(.*)$/);
          _results1.push([_match[1], parseFloat(_match[2]), _match[3] || 'px']);
        }
        return _results1;
      })());
    }
    return _results;
  };

  _get = function(tween) {
    return _parse($(tween.elem).css(tween.prop));
  };

  _set = function(tween) {
    var axis, bg, bgIndex, elem, end, pos, prop, start, unit, _adjusted, _span;

    if (!tween.set) {
      _init(tween);
    }
    elem = tween.elem, prop = tween.prop, pos = tween.pos, unit = tween.unit, start = tween.start, end = tween.end;
    return ((function() {
      var _i, _len, _results;

      _results = [];
      for (bgIndex = _i = 0, _len = start.length; _i < _len; bgIndex = ++_i) {
        bg = start[bgIndex];
        _span = function(axis) {
          return end[bgIndex][axis][1] - start[bgIndex][axis][1];
        };
        _adjusted = function(axis) {
          return start[bgIndex][axis][1] + pos * _span(axis);
        };
        _results.push($(elem).css(prop, ((function() {
          var _j, _len1, _ref, _results1;

          _ref = [0, 1];
          _results1 = [];
          for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
            axis = _ref[_j];
            _results1.push("" + (_adjusted(axis)) + unit);
          }
          return _results1;
        })()).join(' ')));
      }
      return _results;
    })()).join(', ');
  };

  extend(Tween.propHooks, {
    backgroundSize: {
      get: _get,
      set: _set
    },
    backgroundPosition: {
      get: _get,
      set: _set
    }
  });

}).call(this);
